BinarySearch(arr, target):
    left = 0
    right = length(arr) - 1
    
    while left â‰¤ right:
        mid = (left + right) // 2  
        if arr[mid] == target:
            return mid  
        else if arr[mid] < target:
            left = mid + 1  
        else:
            right = mid - 1 
    
    return -1 

Worst Case: O(log n) (each step halves the search space)
Best Case: O(1) (if the target is found in the first comparison)